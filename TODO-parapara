The first goal is to migrate as much as possible of the current
functionality to configuration through parapara rather than GetPot,
with a view then to consider any changes to parameter specification
and syntax that would reduce the risk of misconfiguration.
Changing cli option parsing and error reporting is also a target
(could potentially use tinyopt for this).

Subtasks:

1. Read and parse existing input files through both GetPot and
   parapara in parallel.

   This requires some custom parsing code (adapted from parapara
   custom INI example), and in the first instance, deliberately
   ignoring unrecognized keys when importing.

2. Pick a subset of parameter settings used in state initialization
   for which parapara-based code can generate and validate a
   configuration object to be used instead of GetPot queries.
   Add this parameter to the corresponding interfaces.

3. While continuing to validate correct operation of AMBit,
   continue to migrate parameters in this fashion until
   it is no longer required to pass and store user_input in
   these classes.

Caveats:

1. Multirun is hard to support as currently defined in parapara â€”
   based on the parameter name given in the Multirun option, the
   corresponding parameter specification would need to be substituted
   with one that takes a vector instead of a scalar.

   Can we consider an alternative representation for Multirun?
   Or can we move this functionality outside of Ambit?

2. First stab at directrory organization, class names etc. for
   the parapara code may be a poor stylistic fit, but easy enough
   to change!

One missing feature from parapara:

*  Provide an interface to record that a section is present in an
   imported config.

   Easiest? option: on reading a section heading, check if there is
   a bool parameter of the same name in the specification set, and
   and set its value to true if so. The presence of [foo/bar] in
   the input file could also be represented by an option 'foo/bar'
   or 'foo/bar=true' in command arguments.

